generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
  FREE
  PRO
}

//user model
model User {
  id              String          @id @default(cuid())
  externalId      String?         @unique
  quotaLimit      Int
  plan            Plan            @default(FREE)
  email           String          @unique
  apiKey          String          @unique @default(cuid())
  discordId       String?
  EventCategories EventCategory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Event     Event[]
  Quota     Quota[]

  @@index([email, apiKey])
}

//event category
model EventCategory {
  id    String  @id @default(cuid())
  name  String
  color Int
  emoji String?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Event     Event[]

  @@unique([name, userId])
}

enum DeliveryStatus {
  PENDING
  DELIVERED
  FAILDED
}

model Event {
  id               String @id @default(cuid())
  fromattedMessage String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  name   String
  feilds Json

  deliveryStatus DeliveryStatus @default(PENDING)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  EventCategory EventCategory? @relation(fields: [eventCategory], references: [id])
  eventCategory String?

  @@index([createdAt])
}

model Quota {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  year Int
  month Int
  count Int @default(0)

  updatedAt DateTime @updatedAt
}